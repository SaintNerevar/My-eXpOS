alias functionNum R1;
alias currentPID R2;

//Acquire Terminal (Basically a lock for terminal)
if (functionNum == 8) then
    breakpoint;
    while ([TERMINAL_STATUS_TABLE] == 1) do
        [PROCESS_TABLE + currentPID*16 + 4] = WAIT_TERMINAL;
        multipush(R1, R2);
        call SCHEDULER;
        multipop(R1, R2);
    endwhile;

    [TERMINAL_STATUS_TABLE] = 1;
    [TERMINAL_STATUS_TABLE + 1] = currentPID;
    return;
endif;

//Release Terminal (Release terminal lock)
if (functionNum == 9) then
    breakpoint;
    if (currentPID != [TERMINAL_STATUS_TABLE + 1]) then
        R0 = -1;
    endif;

    [TERMINAL_STATUS_TABLE] = 0;
    alias counter R3;
    alias process_table_entry R4;
    counter = 0;
    while (counter < 16) do
        process_table_entry = PROCESS_TABLE + counter*16;
        if ([process_table_entry + 1] > -1 && [process_table_entry + 4] == WAIT_TERMINAL) then
            [process_table_entry + 4] = READY;
        endif;
        counter = counter + 1;
    endwhile;

    R0 = 0;
    return;
endif;