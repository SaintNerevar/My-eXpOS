//Change from user to kernel stack and save register context
// WARNING!!! DO NOT CHANGE OR ALIAS REGISTERS BEFORE BACKUP!!
[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 13] = SP;
SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 11] * 512 - 1;
backup;

alias currentPID R0;
alias process_table_entry R1;
currentPID = [SYSTEM_STATUS_TABLE + 1];
process_table_entry = PROCESS_TABLE + currentPID * 16;

[process_table_entry + 4] = READY;

//Go through all the live processes and increment tick field
currentPID = 0;
while (currentPID < 16) do
    process_table_entry = PROCESS_TABLE + currentPID*16;
    if ([process_table_entry + 4] != TERMINATED) then
        [process_table_entry] = [process_table_entry] + 1; //Increment Tick
    endif;
    currentPID = currentPID + 1;
endwhile;

call SCHEDULER;

restore;
// CAUTION!!! USING REGISTER ALIASES AFTER RESTORE MAY LEAD TO BUGS!!
SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 13];
[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 9] = 0;   //Set Mode Flag to 0
ireturn;