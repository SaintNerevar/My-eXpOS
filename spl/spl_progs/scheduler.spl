alias currentPID R0;
currentPID = [SYSTEM_STATUS_TABLE + 1];
multipush (BP);

alias process_table_entry R1;
process_table_entry = PROCESS_TABLE + currentPID*16;

[process_table_entry + 12] = SP % 512;
[process_table_entry + 14] = PTBR;
[process_table_entry + 15] = PTLR;

alias newPID R2;
alias state R3;
newPID = 0;
while (currentPID < 15) do
    currentPID = currentPID + 1;
    state = [PROCESS_TABLE + currentPID*16 + 4];
    if (state == CREATED || state == READY) then
        if (state == CREATED) then
            BP = [[PROCESS_TABLE + currentPID*16 + 11]*512];
        endif;
        newPID = currentPID;
        break;
    endif;
endwhile;

process_table_entry = PROCESS_TABLE + newPID*16;
SP = [process_table_entry + 11]*512 + [process_table_entry + 12];
PTBR = [process_table_entry + 14];
PTLR = [process_table_entry + 15];

[SYSTEM_STATUS_TABLE + 1] = newPID;

if (state == CREATED) then
    SP = [process_table_entry + 13];
    [process_table_entry + 4] = RUNNING;
    [process_table_entry + 9] = 0;
    ireturn;
endif;

[process_table_entry + 4] = RUNNING;
multipop (BP);
return;